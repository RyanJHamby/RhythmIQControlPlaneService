#openapi: 3.0.3
#info:
#  title: Rhythmiq Control Plane Service
#  description: API for managing user profiles in the Rhythmiq system.
#  version: "2024-02-25"
#
#servers:
#  - url: https://api.rhythmiq.com
#    description: Production Server
#
#paths:
#  /profiles:
#    post:
#      summary: Create a new profile
#      operationId: createProfile
#      tags:
#        - Profiles
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: "#/components/schemas/CreateProfileRequest"
#      responses:
#        "201":
#          description: Profile created successfully
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/CreateProfileResponse"
#        "400":
#          $ref: "#/components/responses/ValidationException"
#        "409":
#          $ref: "#/components/responses/ConflictException"
#
#    get:
#      summary: List all profiles
#      operationId: listProfiles
#      tags:
#        - Profiles
#      responses:
#        "200":
#          description: A list of profiles
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/ListProfilesResponse"
#
#  /profiles/{profileId}:
#    get:
#      summary: Retrieve a profile by ID
#      operationId: getProfile
#      tags:
#        - Profiles
#      parameters:
#        - name: profileId
#          in: path
#          required: true
#          schema:
#            type: string
#      responses:
#        "200":
#          description: Profile details
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/GetProfileResponse"
#        "404":
#          $ref: "#/components/responses/NotFoundException"
#
#    put:
#      summary: Update an existing profile
#      operationId: updateProfile
#      tags:
#        - Profiles
#      parameters:
#        - name: profileId
#          in: path
#          required: true
#          schema:
#            type: string
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: "#/components/schemas/UpdateProfileRequest"
#      responses:
#        "200":
#          description: Profile updated successfully
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/UpdateProfileResponse"
#        "400":
#          $ref: "#/components/responses/ValidationException"
#        "404":
#          $ref: "#/components/responses/NotFoundException"
#
#    delete:
#      summary: Delete a profile
#      operationId: deleteProfile
#      tags:
#        - Profiles
#      parameters:
#        - name: profileId
#          in: path
#          required: true
#          schema:
#            type: string
#      responses:
#        "204":
#          description: Profile deleted successfully
#        "404":
#          $ref: "#/components/responses/NotFoundException"
#
#components:
#  schemas:
#    CreateProfileRequest:
#      type: object
#      required:
#        - username
#        - firstName
#        - lastName
#        - email
#        - phoneNumber
#        - password
#      properties:
#        username:
#          type: string
#        firstName:
#          type: string
#        lastName:
#          type: string
#        email:
#          type: string
#        phoneNumber:
#          type: string
#        password:
#          type: string
#
#    CreateProfileResponse:
#      type: object
#      properties:
#        message:
#          type: string
#        profileId:
#          type: string
#
#    GetProfileRequest:
#      type: object
#      required:
#        - profileId
#      properties:
#        profileId:
#          type: string
#
#    GetProfileResponse:
#      type: object
#      properties:
#        profileId:
#          type: string
#        username:
#          type: string
#        firstName:
#          type: string
#        lastName:
#          type: string
#        email:
#          type: string
#        phoneNumber:
#          type: string
#
#    UpdateProfileRequest:
#      type: object
#      required:
#        - profileId
#      properties:
#        profileId:
#          type: string
#        username:
#          type: string
#        firstName:
#          type: string
#        lastName:
#          type: string
#        email:
#          type: string
#        phoneNumber:
#          type: string
#        password:
#          type: string
#
#    UpdateProfileResponse:
#      type: object
#      properties:
#        message:
#          type: string
#
#    ListProfilesResponse:
#      type: object
#      properties:
#        profiles:
#          type: array
#          items:
#            $ref: "#/components/schemas/ProfileSummary"
#
#    ProfileSummary:
#      type: object
#      properties:
#        profileId:
#          type: string
#        username:
#          type: string
#        firstName:
#          type: string
#        lastName:
#          type: string
#        email:
#          type: string
#
#    ValidationException:
#      type: object
#      properties:
#        message:
#          type: string
#        errors:
#          type: object
#          additionalProperties:
#            type: integer
#
#    NotFoundException:
#      type: object
#      properties:
#        message:
#          type: string
#
#    ConflictException:
#      type: object
#      properties:
#        message:
#          type: string
#
#  responses:
#    ValidationException:
#      description: Validation failed for the request
#      content:
#        application/json:
#          schema:
#            $ref: "#/components/schemas/ValidationException"
#
#    NotFoundException:
#      description: Resource not found
#      content:
#        application/json:
#          schema:
#            $ref: "#/components/schemas/NotFoundException"
#
#    ConflictException:
#      description: Conflict error (e.g., profile already exists)
#      content:
#        application/json:
#          schema:
#            $ref: "#/components/schemas/ConflictException"
